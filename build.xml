<?xml version="1.0" encoding="utf-8"?>
<project name="NeatlineTime">
  <property name="project.name" value="NeatlineTime" />
  <property name="build.dir" value="${basedir}/build" />
  <property name="test.dir" value="${basedir}/tests" />
  <property name="dist.dir" value="${basedir}/dist" />
  <property name="lang.dir" location="languages" />
  <property name="core.pot" location="../../application/languages/Omeka.pot" />

  <tstamp />
  <property name="now" value="${DSTAMP}-${TSTAMP}" />
  <property name="tar" value="${project.name}-${now}.tar" />
  <property name="gzip" value="${tar}.gz" />

  <target name="clean" description="Clean up the build directory">
    <delete dir="${build.dir}" />
    <delete dir="${dist.dir}" />
  </target>

  <target name="setup" description="Create the directory structure for various reports">
    <mkdir dir="${build.dir}/api" />
    <mkdir dir="${build.dir}/code-browser" />
    <mkdir dir="${build.dir}/coverage" />
    <mkdir dir="${build.dir}/phpmd" />
    <mkdir dir="${build.dir}/jdepend" />
    <mkdir dir="${build.dir}/logs" />
  </target>

  <target name="build-parallel" depends="setup, lint,tools-parallel,phpunit,phpcb" />

  <target name="tools-parallel" description="Runs tools in parallel">
    <parallel threadCount="2">
      <sequential>
        <antcall target="pdepend" />
        <antcall target="phpmd-ci" />
      </sequential>
      <antcall target="phpcpd" />
      <antcall target="phpcs-ci" />
      <antcall target="phpdoc" />
    </parallel>
  </target>

  <target name="package" description="Create a gzipped package of the current branch for distribution">
    <mkdir dir="${dist.dir}" />

    <tar destfile="${dist.dir}/${project.name}-${now}.tar"
      basedir="${basedir}"
      excludes="${build.dir}/**, ${dist.dir}/**, ${test.dir}/**" />
    <gzip zipfile="${dist.dir}/${gzip}" src="${dist.dir}/${tar}" />

    <delete file="${dist.dir}/${tar}" />
  </target>

  <target name="phpunit" depends="setup" description="Run PHPUnit tests and generate code coverage report">
    <exec executable="phpunit" failonerror="false" />
  </target>

  <target name="lint" description="Link the project">
    <apply executable="php" failonerror="true">
      <arg value="-l" />

      <fileset dir="${basedir}">
        <include name="**/*.php" />
      </fileset>
    </apply>
  </target>

  <target name="phploc" depends="setup" description="Measure project size using PHPLOC">
    <exec executable="phploc">
      <arg value="--log-csv"/>
      <arg value="${build.dir}/logs/phploc.csv" />
      <arg path="${basedir}" />
    </exec>
  </target>

  <target name="pdepend" depends="setup" description="Calculates software metrics using PHP_Depend">
    <exec executable="pdepend">
      <arg value="--jdepend-xml=${build.dir}/logs/jdepend.xml" />
      <arg value="--jdepend-chart=${build.dir}/pdepend/dependencies.svg" />
      <arg value="--overview-pyramid=${build.dir}/pdepend/overview-pyramid.svg" />
      <arg path="${basedir}" />
    </exec>
  </target>

  <target name="phpmd" depends="setup" description="Perform project mess detection using PHPMD">
    <exec executable="phpmd">
      <arg path="${basedir}" />
      <arg value="text" />
      <arg value="${basedir}/phpmd.xml" />
    </exec>
  </target>

  <target name="phpmd-ci" description="Perform project mess detection and write xml file">
    <exec executable="phpmd">
      <arg path="${basedir}" />
      <arg value="xml" />
      <arg value="${basedir}/phpmd.xml" />
      <arg value="--reportfile" />
      <arg value="${build.dir}/logs/pmd.xml" />
    </exec>
  </target>


  <target name="phpcpd" description="Find duplicate code using PHPCPD">
    <exec executable="phpcpd">
      <arg value="--log-pmd" />
      <arg value="${build.dir}/logs/pmd-cpd.xml" />
      <arg value="${basedir}" />
    </exec>
  </target>

  <target name="phpcs"
    description="Find coding standard violations using PHP_CodeSniffer">
    <exec executable="phpcs">
      <arg value="--standard=${basedir}/phpcs.xml" />
      <arg value="--ignore=autoload.php" />
      <arg path="${basedir}" />
    </exec>
  </target>

  <target name="phpcs-ci"
    description="Find coding standard violations using PHP_CodeSniffer">
    <exec executable="phpcs" output="/dev/null">
      <arg value="--report=checkstyle" />
      <arg value="--report-file=${build.dir}/logs/checkstyle.xml" />
      <arg value="--standard=${basedir}/phpcs.xml" />
    </exec>
  </target>

  <target name="phpdoc" description="Generate API documentation">
    <exec executable="phpdoc">
      <arg value="--directory" />
      <arg value="${basedir}" />
      <arg value="--target" />
      <arg value="${build.dir}/api"/>
    </exec>
  </target>

  <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
    <exec executable="phpcb">
      <arg value="--log" />
      <arg path="${build.dir}/logs" />
      <arg value="--source" />
      <arg path="${basedir}" />
      <arg value="--output" />
      <arg path="${build.dir}/code-browser" />
    </exec>
  </target>

  <target name="usage">
    <echo message="Type ant -p to list all the targets available in this build script." />
  </target>

  <target name="update-pot" description="Update the translation template.">
    <property name="pot.file" location="${lang.dir}/template.pot"/>
    <property name="pot.base" location="${lang.dir}/template.base.pot"/>
    <tempfile property="pot.temp" suffix=".pot"/>
    <tempfile property="pot.duplicates" suffix="-duplicates.pot" />
    <apply executable="xgettext" relative="true" parallel="true" verbose="true">
      <arg value="-L"/>
      <arg value="php"/>
      <arg value="--from-code=utf-8"/>
      <arg value="-k__"/>
      <arg value="--flag=__:1:pass-php-format"/>
      <arg value="--omit-header"/>
      <arg value="-F"/>
      <arg value="-o"/>
      <arg file="${pot.temp}"/>
      <fileset dir="." includes="**/*.php **/*.phtml" excludes="tests/"/>
    </apply>
    <exec executable="msgcomm">
      <arg value="--omit-header" />
      <arg value="-o" />
      <arg file="${pot.duplicates}" />
      <arg file="${pot.temp}" />
      <arg file="${core.pot}" />
    </exec>
    <exec executable="msgcomm">
      <arg value="-u" />
      <arg value="-o" />
      <arg file="${pot.temp}" />
      <arg file="${pot.temp}" />
      <arg file="${pot.duplicates}" />
    </exec>
    <exec executable="msgcat">
      <arg value="-o"/>
      <arg file="${pot.file}"/>
      <arg file="${pot.base}"/>
      <arg file="${pot.temp}"/>
    </exec>
    <delete file="${pot.temp}" quiet="true" />
    <delete file="${pot.duplicates}" quiet="true" />
  </target>

  <target name="build-mo" description="Build the MO translation files.">
    <apply executable="msgfmt" dest="${lang.dir}" verbose="true">
      <arg value="-o"/>
      <targetfile />
      <srcfile />
      <fileset dir="${lang.dir}" includes="*.po"/>
      <mapper type="glob" from="*.po" to="*.mo"/>
    </apply>
  </target>
</project>
